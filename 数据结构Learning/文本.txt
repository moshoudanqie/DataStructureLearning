1.树形结构是每个元素只有一个前驱，但是可以有多个后继。1对n
2.图形结构是每个元素有多个前驱，多个后继。多对多
3.树含有n个节点：
	当n=0->为空树
	当n>0->有且只有一个节点作为根（root），其他节点可分为m个不相交的集合，这些集合本身又是一个数，称为根的子树（subtree）
如此看来树是一个递归的结构，所以我们经常用递归来操作树。

4.树的基本术语：
	・结点（没有 前驱的节点是根节点）
	・一个节点有几个后继，有几个子树，有几个分支，称为这个节点的度
	・树的度：树中所有节点的度的最大值
	・后继为0，没有后继，度为0的节点称为叶子节点，终端节点。  度不为0，分支节点或内部节点
	・孩子，双亲。 如果有共同的双亲，则成为他们是兄弟，位于同一层的节点称为兄弟，位于同一层但是有不同双亲的节点是堂兄弟的关系，从根节点到这个节点经过的所有节点称为这个节点的祖先。子孙：
	以某节点为根的子树中所有的节点是根节点的子孙。
5.树的深度：/高度：树中节点的最高层次
6.	有序树: 树中结点的各子树从左到右有次序
	无序树：无次序
7.森林：m棵互不相交的树的集合
一棵树可以看成特殊的森林

――》1.所有的树可以转化为唯一的二叉树：
2.二叉树的子树有左右之分，是有顺序的，即使是只有一个子树时都要分左右。。所以二叉树不是树的特例。

案例1：数据压缩问题：哈夫曼编码
案例2：用二叉树求解表达式的值：叶子节点都是运算数，双亲节点都是运算符

二叉树的性质和存储结构
	性质1：在二叉树的第i层上至多有2^(i-1)个结点，最少有1个结点
	性质2：一个深度为k的二叉树上最多有2^k-1个节点，最少有k个结点
	性质3：对任何一棵二叉树T，如果其叶子树为n0，度为2的结点数为n2，则 n0=n2+1

满二叉树：如果一个二叉树结点数达到最大，就是满二叉树
完全二叉树：深度为k的具有n个节点的二叉树，当且仅当其每一个结点都与深度为k的满二叉树中的编号为1
到n一一对应，就是完全二叉树
	特点：1.叶子只可能分别在层次最大的两层上、
		2.对于任意节点，如果其右子树度最大层次是i，则其左子树的最大层次必为i或i+1
	性质4：具有N个结点的完全二叉树的深度为[log2N]+1
	性质5：

